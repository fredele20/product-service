// Code generated by MockGen. DO NOT EDIT.
// Source: redis.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockCacheRedisStore is a mock of CacheRedisStore interface.
type MockCacheRedisStore struct {
	ctrl     *gomock.Controller
	recorder *MockCacheRedisStoreMockRecorder
}

// MockCacheRedisStoreMockRecorder is the mock recorder for MockCacheRedisStore.
type MockCacheRedisStoreMockRecorder struct {
	mock *MockCacheRedisStore
}

// NewMockCacheRedisStore creates a new mock instance.
func NewMockCacheRedisStore(ctrl *gomock.Controller) *MockCacheRedisStore {
	mock := &MockCacheRedisStore{ctrl: ctrl}
	mock.recorder = &MockCacheRedisStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCacheRedisStore) EXPECT() *MockCacheRedisStoreMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockCacheRedisStore) Get(ctx context.Context, key string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, key)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockCacheRedisStoreMockRecorder) Get(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCacheRedisStore)(nil).Get), ctx, key)
}

// Set mocks base method.
func (m *MockCacheRedisStore) Set(ctx context.Context, key string, value []byte, duration time.Duration) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", ctx, key, value, duration)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Set indicates an expected call of Set.
func (mr *MockCacheRedisStoreMockRecorder) Set(ctx, key, value, duration interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockCacheRedisStore)(nil).Set), ctx, key, value, duration)
}
